// <auto-generated />
using System;
using FlightSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightSystem.Data.Migrations
{
    [DbContext(typeof(FlightContext))]
    [Migration("20241003124729_fix philadelphia")]
    partial class fixphiladelphia
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("FlightSystem.Data.Airport", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Airports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c71f5d8d-0cb5-4543-a311-1634e9e7bfc6"),
                            Code = "ATL",
                            Name = "Atlanta"
                        },
                        new
                        {
                            Id = new Guid("5654f336-9fab-4c97-be51-b6a14a51dcda"),
                            Code = "EWR",
                            Name = "Newark"
                        },
                        new
                        {
                            Id = new Guid("c4ac12df-ae7b-4b9e-99dc-79d3ec0fb6cf"),
                            Code = "SLC",
                            Name = "Salt Lake City"
                        },
                        new
                        {
                            Id = new Guid("a22f127a-05bb-4c62-9cdd-98b6470a536b"),
                            Code = "PHL",
                            Name = "Philadelphia"
                        });
                });

            modelBuilder.Entity("FlightSystem.Data.Flight", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DestinationId")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OriginId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.ToTable("Flights");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f6ca3782-ecfd-4417-b588-b1d988faf97b"),
                            Departure = new DateTime(2024, 10, 3, 8, 47, 28, 838, DateTimeKind.Local).AddTicks(5487),
                            DestinationId = new Guid("c71f5d8d-0cb5-4543-a311-1634e9e7bfc6"),
                            Duration = new TimeSpan(0, 3, 0, 0, 0),
                            OriginId = new Guid("5654f336-9fab-4c97-be51-b6a14a51dcda")
                        });
                });

            modelBuilder.Entity("FlightSystem.Data.Flight", b =>
                {
                    b.HasOne("FlightSystem.Data.Airport", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightSystem.Data.Airport", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });
#pragma warning restore 612, 618
        }
    }
}
